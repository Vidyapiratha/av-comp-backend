schema {
  query: Query
  mutation: Mutation
}

type Pilot {
  id: ID!
  clientId: ID!
  pilot_active: Boolean!
  pilot_firstname: String!
  pilot_lastname: String!
  pilot_dob: String!
  pilot_email: String!
  pilot_jobtitle: String!
  pilot_portal_access: Boolean!
  pilot_portal_role: PortalUserRole!
  pilot_created_on: String!
  pilot_created_by: PortalUser
  pilot_updated_on: String!
  pilot_updated_by: PortalUser
  pilot_notes: String
}

type PortalUserRole {
  id: ID!
  name: String!
  pilots: [Pilot!]
}

type PortalUser {
  id: ID!
  name: String!
  createdPilots: [Pilot!]
  updatedPilots: [Pilot!]
}

type Query {
  getPilot(id: ID!): Pilot
  getPilots(offset: Int = 0, limit: Int = 10): [Pilot]
  getPilotByEmail(email: String!): Pilot
}

type Mutation {
  createPilot(
    clientId: ID!
    pilot_active: Boolean!
    pilot_firstname: String!
    pilot_lastname: String!
    pilot_dob: String!
    pilot_email: String!
    pilot_jobtitle: String!
    pilot_portal_access: Boolean!
    pilot_portal_role: ID!
    pilot_created_by: ID!
    pilot_updated_by: ID!
    pilot_notes: String
  ): PilotResponse
  updatePilot(
    id: ID
    clientId: ID
    pilot_active: Boolean
    pilot_firstname: String
    pilot_lastname: String
    pilot_dob: String
    pilot_email: String!
    pilot_jobtitle: String
    pilot_portal_access: Boolean
    pilot_portal_role: ID
    pilot_updated_by: ID
    pilot_notes: String
  ): PilotResponse
}

type PilotResponse {
  message: String!
  result: Pilot
}
